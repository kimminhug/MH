/*
	﻿제이쿼리(jQuery)를 이용한 슬라이드 플러그인 V5 (jquery.slides.min.js)
	
	2014-04-29 | 이찬희 (leechanee1) | lee1.kr | leechanee1@lee1.kr
	사용시, 저작자 표시를 지우지 말아주세요.
*/
$.fn.slides = function(a) { var obj = $(this); var cfg = { width : typeof(a.width) != 'number' ? 750 : a.width, height : typeof(a.height) != 'number' ? 200 : a.height, interval : typeof(a.interval) != 'number' ? 3000 : a.interval, speed : typeof(a.speed) != 'number' ? 750 : a.speed, auto : typeof(a.auto) != 'number' ? 1 : a.auto, hoverstop : typeof(a.hoverstop) != 'number' ? 1 : a.hoverstop, usebtn : typeof(a.usebtn) != 'number' ? 0 : a.usebtn, prevbtn : typeof(a.prevbtn) != 'object' ? 0 : a.prevbtn, nextbtn : typeof(a.nextbtn) != 'object' ? 0 : a.nextbtn, useindicator : typeof(a.useindicator) != 'number' ? 0 : a.useindicator, indicator : typeof(a.indicator) != 'object' ? 0 : a.indicator }; cfg.count = obj.children().length; cfg.index = 0; /* element에 css 적용 */ obj.css({ 'width' : cfg.width + 'px', 'height' : cfg.height + 'px', 'overflow' : 'hidden', 'position' : 'relative'/*, 'margin' : '0', 'padding' : '0'*/ }); /* 자식 요소(slide)를 감싸는 slides_window에 css 적용 */ obj.children().wrapAll('<div class="slides_window"></div>'); var slide_window = obj.children('.slides_window'); slide_window.css({ 'width' : (cfg.width * cfg.count) + 'px', 'height' : cfg.height }); /* 자식 요소에 css 적용 */ slide_window.children().css({'float':'left'}); /* 인디케이터 설정 */ if (cfg.useindicator) { if (!cfg.indicator) { var indicator = '<div id="' + obj.prop('id') + '_indicator"></div>'; obj.after(indicator); cfg.indicator = $('#' + obj.prop('id') + '_indicator'); } cfg.indicator.append('<ul></ul>'); cfg.indicator.css({'width' : cfg.count * 16 + 'px'}); for (var i = 0; i < cfg.count; i++) { cfg.indicator.children('ul').append('<li class></li>'); } cfg.setIndicator = function() { cfg.indicator.children('ul').children().removeClass('on'); cfg.indicator.children('ul').children().eq(cfg.index).addClass('on'); }; cfg.setIndicator(); } /* 버튼 사용 여부 */ if (cfg.usebtn) { if (!cfg.prevbtn && !cfg.nextbtn) { /* 없다면 일반 button 사용 */ var btn = ''; btn += '<button type="button" id="' + obj.prop('id') + '_btnPrev">Prev</button>'; btn += '<button type="button" id="' + obj.prop('id') + '_btnNext">Next</button>'; /* obj 다음에 btn 삽입 */ obj.after(btn); /* cfg 에도 값 저장 */ cfg.prevbtn = $('#' + obj.prop('id') + '_btnPrev'); cfg.nextbtn = $('#' + obj.prop('id') + '_btnNext'); } /* 클릭 이벤트 */ cfg.prevbtn.click(function() { /* 중복 방지를 위해 animate가 아닐 때만 */ if (!slide_window.is(':animated')) { prev(); if (cfg.auto) { /* 자동 진행중이라면 인터벌 초기화 */ clearInterval(cfg.interval_); cfg.interval_ = setInterval(next, cfg.interval); } } }); cfg.nextbtn.click(function() { /* 중복 방지를 위해 animate가 아닐 때만 */ if (!slide_window.is(':animated')) { next(); if (cfg.auto) { /* 자동 진행중이라면 인터벌 초기화 */ clearInterval(cfg.interval_); cfg.interval_ = setInterval(next, cfg.interval); } } }); } /* auto = 1 일 경우 자동 재생 */ if (cfg.auto) { cfg.interval_ = setInterval(next, cfg.interval); /* hoverstop = 1 일 경우 인터벌 초기화 */ if (cfg.hoverstop) { slide_window.hover(function() { clearInterval(cfg.interval_); }, function() { cfg.interval_ = setInterval(next, cfg.interval); }); } } /* 다음으로 넘기는 함수 */ function next() { if (cfg.index == (cfg.count - 1)) cfg.index = 0; else cfg.index++; slide_window.stop().animate({marginLeft : -cfg.width}, cfg.speed, function() { slide_window.children().eq(0).insertAfter(slide_window.children().eq(cfg.count - 1)); slide_window.css({'margin-left' : 0}); }).clearQueue(); if (cfg.useindicator) cfg.setIndicator(); } /* 이전으로 넘기는 함수 */ function prev() { if (cfg.index == 0) cfg.index = (cfg.count - 1); else cfg.index--; slide_window.stop().animate({marginLeft : -cfg.width}, 0, function() { slide_window.children().eq(cfg.count - 1).insertBefore(slide_window.children().eq(0)); slide_window.animate({marginLeft: 0}, cfg.speed); }).clearQueue(); if (cfg.useindicator) cfg.setIndicator(); } } 